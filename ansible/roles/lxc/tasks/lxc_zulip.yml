---
- name: Set container_name variable
  set_fact:
    container_name: "{{ container_name_zulip }}"

- name: Check if the LXC container {{ container_name }} exists
  command: lxc info {{ container_name }}
  register: container_check
  ignore_errors: true
  changed_when: false

- name: Create LXC container {{ container_name }}
  when: container_check.failed
  command: lxc init ubuntu:24.04 {{ container_name }}
  become: yes

- name: Stop LXC container {{ container_name }}
  command: lxc stop {{ container_name }}
  ignore_errors: true

- name: Remove network device from profile for container {{ container_name}}
  command: lxc config device remove {{ container_name}} eth0
  become: yes
  ignore_errors: true  # In case it wasn't in the profile to begin with

- name: Add static IP to the container {{ container_name }} directly
  command: lxc config device add {{ container_name }} eth0 nic \
           nictype=bridged \
           parent=lxdbr0 \
           ipv4.address={{ lxdbr0_subnet }}8
  become: yes

- name: Start LXC container zulip
  command: lxc start {{ container_name }}
  
- name: Wait for the LXC container to be fully running
  shell: |
    lxc info {{ container_name }} | grep -q "Status: RUNNING"
  register: container_running
  retries: 3  # Number of retries
  delay: 3    # Wait n seconds between retries
  until: container_running.rc == 0
  changed_when: false
  ignore_errors: false  

- name: Ensure LXC container zulip starts on boot
  command: lxc config set {{ container_name }} boot.autostart true
  ignore_errors: no
  become: yes

- name: Get LXC container {{ container_name }} IP address
  register: container_ip
  changed_when: false
  become: yes
  shell: |
    lxc info {{ container_name }} | grep "inet: .* (global)" | awk '{ print $2 }' | awk -F/ '{ print $1 }';

- name: Add LXC container {{ container_name }} to Ansible inventory
  add_host:
    name: "{{ container_name }}"
    ansible_host: "{{ container_ip.stdout }}"
    ansible_user: ubuntu
  delegate_to: localhost
